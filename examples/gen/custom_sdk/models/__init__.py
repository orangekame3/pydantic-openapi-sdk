# generated by datamodel-codegen:
#   filename:  tmpw19nbzjr.json
#   timestamp: 2025-08-13T12:37:22+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Optional

from pydantic import BaseModel, Field


class Status(Enum):
    placed = "placed"
    approved = "approved"
    delivered = "delivered"


class Order(BaseModel):
    id: int | None = Field(None, examples=[10])
    petId: int | None = Field(None, examples=[198772])
    quantity: int | None = Field(None, examples=[7])
    shipDate: datetime | None = None
    status: Status | None = Field(
        None, description="Order Status", examples=["approved"]
    )
    complete: bool | None = None


class Category(BaseModel):
    id: int | None = Field(None, examples=[1])
    name: str | None = Field(None, examples=["Dogs"])


class User(BaseModel):
    id: int | None = Field(None, examples=[10])
    username: str | None = Field(None, examples=["theUser"])
    firstName: str | None = Field(None, examples=["John"])
    lastName: str | None = Field(None, examples=["James"])
    email: str | None = Field(None, examples=["john@email.com"])
    password: str | None = Field(None, examples=["12345"])
    phone: str | None = Field(None, examples=["12345"])
    userStatus: int | None = Field(None, description="User Status", examples=[1])


class Tag(BaseModel):
    id: int | None = None
    name: str | None = None


class Status1(Enum):
    available = "available"
    pending = "pending"
    sold = "sold"


class Pet(BaseModel):
    id: int | None = Field(None, examples=[10])
    name: str = Field(..., examples=["doggie"])
    category: Category | None = None
    photoUrls: list[str]
    tags: list[Tag] | None = None
    status: Status1 | None = Field(None, description="pet status in the store")


class ApiResponse(BaseModel):
    code: int | None = None
    type: str | None = None
    message: str | None = None
