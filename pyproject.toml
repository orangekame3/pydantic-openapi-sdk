[project]
name = "pydantic-openapi-sdk"
version = "0.1.0"
description = "Python OpenAPI SDK generator with sync HTTP client and Pydantic v2 models"
readme = "README.md"
license = {text = "Apache-2.0"}
authors = [
    {name = "orangekame3", email = "orangekame3.dev@gmail.com"}
]
requires-python = ">=3.10"
dependencies = [
    "click>=8.2.1",
    "datamodel-code-generator>=0.32.0",
    "httpx>=0.28.1",
    "jinja2>=3.1.6",
    "pydantic>=2.11.7",
    "pyyaml>=6.0.2",
]

[project.scripts]
pydantic-openapi-sdk = "pydantic_openapi_sdk.cli:main"

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
include = ["pydantic_openapi_sdk*"]

[tool.uv]
dev-dependencies = [
    "pytest>=7.0.0",
]
package = true

[dependency-groups]
dev = [
    "pre-commit>=4.3.0",
    "ruff>=0.12.8",
]

[tool.ruff]
line-length = 88
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
]
ignore = [
    "E501",  # line too long, handled by formatter
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "ARG002", # unused method argument
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.isort]
known-first-party = ["pydantic_openapi_sdk"]
